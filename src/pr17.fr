module fr99.Pr17 where

import frege.test.QuickCheck

split :: [a] -> Int -> ([a],[a])
split [] _     = ([],[])
split (x:xs) n | n <= 0 = (x:xs,[])
               | n == 1 = ([x],xs)
               | otherwise = let (head,tail) = (split xs (n - 1))
                   in (x:head, tail)

example1 = property $
    (split (toList "abcdefghik") 3)
    ==
    ((toList "abc"), (toList "defghik"))
